#include "TestController.h"
#include "TestPkg.h"
#include "UnitTest.h"

/////////////////////////////////////////////////////////////////////////////////////////
//
// Function: AddUnitTest
// Notes:    None
//
/////////////////////////////////////////////////////////////////////////////////////////
void TestController::AddUnitTest(UnitTest* unitTest)
{
  UnitTests.push_back(unitTest);
}

/////////////////////////////////////////////////////////////////////////////////////////
//
// Function: ExecuteSingleTest
// Notes:    None
//
/////////////////////////////////////////////////////////////////////////////////////////
void TestController::ExecuteSingleTest(const char* testName, const char* testCase)
{
  for (size_t i = 0; i < UnitTests.size(); ++i)
  {
    UnitTests[i]->BuildTestPkg();
    if (0 == UnitTests[i]->GetTestPkg()->GetClassName().compare(testName))
    {
      UnitTests[i]->GetTestPkg()->ExecuteSingleTest(testCase);
      break;
    }
  }
}

/////////////////////////////////////////////////////////////////////////////////////////
//
// Function: ExecuteAllUnitTests
// Notes:    None
//
/////////////////////////////////////////////////////////////////////////////////////////
void TestController::ExecuteAllUnitTests()
{
  for (size_t i = 0; i < UnitTests.size(); ++i)
  {
    UnitTests[i]->BuildTestPkg()->ExecuteAllTests();
  }
}

/////////////////////////////////////////////////////////////////////////////////////////
//
// Function: TestController
// Notes:    None
//
/////////////////////////////////////////////////////////////////////////////////////////
TestController::TestController()
{

}

/////////////////////////////////////////////////////////////////////////////////////////
//
// Function: ~TestController
// Notes:    None
//
/////////////////////////////////////////////////////////////////////////////////////////
TestController::~TestController()
{

}